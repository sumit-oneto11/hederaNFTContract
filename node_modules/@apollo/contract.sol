// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.7.0 <0.9.0; 
contract Arca {

    address public depositAddress;
    mapping(uint256 => address) public users;

    event UserAdded(address user, uint256 userId);
    event MoneyAdded(address user, uint256 amount);

    constructor() {
       depositAddress=msg.sender;
    }   

    function addUsers(uint256 userId) public {
            require(userId>0,"Invalid Id!");
            require(users[userId]==address(0),"Id already in use!");
            users[userId]=msg.sender;
            emit UserAdded(msg.sender, userId);
        }

    function Deposit() public payable {
            require(msg.value>0,"Insufficient Amount!");
            payable(depositAddress).transfer(msg.value);
            emit MoneyAdded(msg.sender, msg.value);
        }
    
    function changeDepositAddress(address newAddress) public {
        require(msg.sender==depositAddress);
        depositAddress=newAddress;
    }
}